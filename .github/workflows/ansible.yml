name: Run ansible deployment

on:
  push:
    branches: [ deploy ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout latest master branch
      uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install ansible with pip
      run: |
        pip install ansible
      working-directory: ansible

    - name: Create ansible hosts file
      env:
        WEB_SERVER: ${{ secrets.WEB_SERVER }}
        API_SERVER: ${{ secrets.API_SERVER }}
        APP_SERVER: ${{ secrets.APP_SERVER }}
        DB_SERVER: ${{ secrets.DB_SERVER }}
      run: |
        cat << EOF > hosts
        [webserver]
        $WEB_SERVER ansible_user=root

        [apiserver]
        $API_SERVER ansible_user=root

        [appserver]
        $APP_SERVER ansible_user=root

        [dbserver]
        $DB_SERVER ansible_user=root
        EOF
      working-directory: ansible

    - name: Create ssh private key file
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "$SSH_PRIVATE_KEY" > id_rsa
        chmod 400 id_rsa
      working-directory: ansible

    - name: Create group_vars/all file
      env:
        DB_NAME: ${{ secrets.DB_NAME }}
        APP_NAME: ${{ secrets.APP_NAME }}
        JWT_TOKEN: ${{ secrets.JWT_TOKEN }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_KEY: ${{ secrets.CLIENT_KEY }}
        APP_DOMAIN: ${{ secrets.APP_DOMAIN }}
        API_DOMAIN: ${{ secrets.API_DOMAIN }}
        ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        RESET_SECRET: ${{ secrets.RESET_SECRET }}
        DB_URL_STRING: ${{ secrets.DB_URL_STRING }}
        DB_PRIVATE_ADDRESS: ${{ secrets.DB_PRIVATE_ADDRESS }}
        APP_PRIVATE_ADDRESS: ${{ secrets.APP_PRIVATE_ADDRESS }}
        API_PRIVATE_ADDRESS: ${{ secrets.API_PRIVATE_ADDRESS }}
        GENERAL_PASSWORD_SALT: ${{ secrets.GENERAL_PASSWORD_SALT }}
        WEBSERVER_PASSWORD: ${{ secrets.WEBSERVER_PASSWORD }}
        APPSERVER_PASSWORD: ${{ secrets.APPSERVER_PASSWORD }}
        APISERVER_PASSWORD: ${{ secrets.APISERVER_PASSWORD }}
        DBSERVER_PASSWORD: ${{ secrets.DBSERVER_PASSWORD }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_TLS: ${{ secrets.SMTP_TLS }}
        SMTP_SSL: ${{ secrets.SMTP_SSL }}
      run: |
        cat << EOF > group_vars/all
        ---

        db_name: "$DB_NAME"
        app_name: "$APP_NAME"
        client_id: "$CLIENT_ID"
        client_key: "$CLIENT_KEY"
        app_domain: "$APP_DOMAIN"
        api_domain: "$API_DOMAIN"
        admin_email: "$ADMIN_EMAIL"
        jwt_secret: "$JWT_TOKEN"
        reset_secret: "$RESET_SECRET"
        db_private_address: "$DB_PRIVATE_ADDRESS"
        app_private_address: "$APP_PRIVATE_ADDRESS"
        api_private_address: "$API_PRIVATE_ADDRESS"
        db_password: "$DB_PASSWORD"
        db_url_string: "$DB_URL_STRING"
        dbserver_password: "$DBSERVER_PASSWORD"
        webserver_password: "$WEBSERVER_PASSWORD"
        appserver_password: "$APPSERVER_PASSWORD"
        apiserver_password: "$APISERVER_PASSWORD"
        general_password_salt: "$GENERAL_PASSWORD_SALT"
        smtp_username: "$SMTP_USERNAME"
        smtp_password: "$SMTP_PASSWORD"
        smtp_server: "$SMTP_SERVER"
        smtp_port: "$SMTP_PORT"
        smtp_tls: "$SMTP_TLS"
        smtp_ssl: "$SMTP_SSL"
        EOF
      working-directory: ansible

    - name: Run ansible playbook
      run: ansible-playbook sites.yml --private-key id_rsa --inventory hosts
      working-directory: ansible
